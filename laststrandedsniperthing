local settingz = {

	allowmusic = false, -- If you want the music or not.
	instantteleport = false, -- When teleporting, this determines if the teleportation is instant or not.
	dashcooldown = true, -- Enable Dash Cooldown
    reload_voice = true, -- Enable reload voicelines
	dashcooldowntime = 1, -- Self Explanitory
	posekey = "I", -- Key to pose.
	dashkey = "Y", -- Key to Dash.
	tpkey = "U", -- Key to Teleport.
	custommusic = "holdout_fight2", -- Look in game.ReplicatedStorage.soundLibrary.songs to find songs to play, then input the name here.
	itemtospawn = "SUPSniper" -- Change this to any item ingame.

}


--[[made by ry

VERSION 5 [FIRST RELEASE]
load this in a round to pursue
editable
if your making a char script using this template, you can credit me if you want, your choice.

]]--
local rep = game:GetService("ReplicatedStorage")
local animfolder = rep.animationSets.TPanimSets
local plr = game.Players.LocalPlayer
local char = plr.Character
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local posing = false
local allowmusic = settingz.allowmusic
local humanoiddied = false
local dashcd = false
local current_rel_vc = "reload1"


--anims
local maliceanim = char:WaitForChild("Humanoid"):LoadAnimation(animfolder.special.malice_combat)
local restanim = char:WaitForChild("Humanoid"):LoadAnimation(animfolder.special.malice_rest)
restanim:AdjustSpeed(0.75)
animfolder.global.run.AnimationId = animfolder.global.runOLD.AnimationId
animfolder.global.low_walk.AnimationId = animfolder.global.runOLD.AnimationId
animfolder.global.low_idle.AnimationId = animfolder.global.idle.AnimationId

--func

function spawn(Item)
	local plrorigpos = char:WaitForChild("HumanoidRootPart").CFrame
	local workbench = workspace.Interactables:FindFirstChild("Workbench")
	local item = ""..Item..""
	game.Players.LocalPlayer.Character:PivotTo(workbench:GetPivot() + Vector3.new(0, 5, 0))
	local args = {
		[1] = workspace.Interactables.Workbench,
		[2] = "workbenchblueprint"..item.."",
	}

	game:GetService("ReplicatedStorage").Interactables.interaction:FireServer(unpack(args))
	wait(0.01)
	char:WaitForChild("HumanoidRootPart").CFrame = plrorigpos
	wait(1.7)
	local args = {
		[1] = workspace.Interactables.Workbench,
		[2] = "workbench",
	}

	game:GetService("ReplicatedStorage").Interactables.interaction:FireServer(unpack(args))
	wait(5.1)
	game.Players.LocalPlayer.Character:PivotTo(workbench:GetPivot() + Vector3.new(0, 5, 0))
	wait(3)
	char:WaitForChild("HumanoidRootPart").CFrame = plrorigpos
end

function voiceline_c()
local rm = math.random(1,9)
if rm == 1 then
    current_rel_vc = reload1
end
if rm == 2 then
    current_rel_vc = reload2
end
if rm == 3 then
    current_rel_vc = reload3
end
if rm == 4 then
    current_rel_vc = reload4
end
if rm == 5 then
    current_rel_vc = reload5
end
if rm == 6 then
    current_rel_vc = reload6
end
if rm == 7 then
    current_rel_vc = reload7
end
if rm == 8 then
    current_rel_vc = reload8
end
if rm == 9 then
    current_rel_vc = reload9
end
end

--scripts
if allowmusic == true then
	if workspace.activePlayers[plr.Name].HumanoidRootPart:FindFirstChild(settingz.custommusic) then
		print("music alr playing bruv!!")
	else
		workspace.ServerStuff.playAudio:FireServer({"songs"}, ""..settingz.custommusic.."", char.PrimaryPart)
	end
end
workspace.ServerStuff.playAudio:FireServer({"voices", "ilija", "arrive"}, "arrive3", workspace)
spawn(settingz.itemtospawn)
workspace.ServerStuff.playAudio:FireServer({"voices", "ilija", "quip"}, "quip2", workspace)
workspace.ServerStuff.playAudio:FireServer({"events"}, "shiparrive2", char.PrimaryPart)
workspace.ServerStuff.playAudio:FireServer({"events"}, "shiparrive", char.PrimaryPart)
local atmosphere = Instance.new("Atmosphere")
atmosphere.Parent = game.Lighting
atmosphere.Density = 0
if workspace.Crossroads.clips:FindFirstChild("Blocker") then workspace.Crossroads.clips.Blocker:Destroy() end
for i,rpath in pairs(workspace.Crossroads.clips:GetDescendants()) do
    if rpath.Name == "Right path" then
rpath:Destroy()
    end
end
if workspace.Camera:FindFirstChild("Bottom") then workspace.Camera.Bottom:Destroy() end
wait(6)
workspace.ServerStuff.playAudio:FireServer({"voices", "ilija", "end"}, "end1", workspace)


--kbinds
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if gameProcessedEvent == true then
		return
	end
	if settingz.dashcooldown == true then
		if char.Parent == workspace.activePlayers and humanoiddied == false then
			if input.KeyCode == Enum.KeyCode[settingz.dashkey] and dashcd == false then
				dashcd = true
				local direction = char.PrimaryPart.CFrame.Position + Vector3.new(0, .5, 0)
				local bodyPosition = Instance.new("BodyPosition")
				bodyPosition.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				bodyPosition.P = 27500

				if UserInputService:IsKeyDown(Enum.KeyCode.W) == true then direction -= char.PrimaryPart.CFrame.ZVector * 18 end
				if UserInputService:IsKeyDown(Enum.KeyCode.A) == true then direction -= char.PrimaryPart.CFrame.XVector * 18 end
				if UserInputService:IsKeyDown(Enum.KeyCode.S) == true then direction += char.PrimaryPart.CFrame.ZVector * 18 end
				if UserInputService:IsKeyDown(Enum.KeyCode.D) == true then direction += char.PrimaryPart.CFrame.XVector * 18 end

				if UserInputService:IsKeyDown(Enum.KeyCode.W) == false and UserInputService:IsKeyDown(Enum.KeyCode.A) == false and UserInputService:IsKeyDown(Enum.KeyCode.S) == false and UserInputService:IsKeyDown(Enum.KeyCode.D) == false then direction += char.PrimaryPart.CFrame.ZVector * 18 end

				workspace.ServerStuff.playAudio:FireServer({"soldiers"}, "dash", char.PrimaryPart)
				bodyPosition.Position = direction
				bodyPosition.Parent = char.PrimaryPart
				char.Humanoid:LoadAnimation(animfolder.special.dash):Play()

				task.wait(.2)
				bodyPosition:Destroy()
				wait(settingz.dashcooldowntime)
				dashcd = false
			end
		end
	else
		if char.Parent == workspace.activePlayers and humanoiddied == false then
			if input.KeyCode == Enum.KeyCode[settingz.dashkey] then
				local direction = char.PrimaryPart.CFrame.Position + Vector3.new(0, .5, 0)
				local bodyPosition = Instance.new("BodyPosition")
				bodyPosition.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				bodyPosition.P = 27500

				if UserInputService:IsKeyDown(Enum.KeyCode.W) == true then direction -= char.PrimaryPart.CFrame.ZVector * 18 end
				if UserInputService:IsKeyDown(Enum.KeyCode.A) == true then direction -= char.PrimaryPart.CFrame.XVector * 18 end
				if UserInputService:IsKeyDown(Enum.KeyCode.S) == true then direction += char.PrimaryPart.CFrame.ZVector * 18 end
				if UserInputService:IsKeyDown(Enum.KeyCode.D) == true then direction += char.PrimaryPart.CFrame.XVector * 18 end

				if UserInputService:IsKeyDown(Enum.KeyCode.W) == false and UserInputService:IsKeyDown(Enum.KeyCode.A) == false and UserInputService:IsKeyDown(Enum.KeyCode.S) == false and UserInputService:IsKeyDown(Enum.KeyCode.D) == false then direction += char.PrimaryPart.CFrame.ZVector * 18 end

				workspace.ServerStuff.playAudio:FireServer({"soldiers"}, "dash", char.PrimaryPart)
				bodyPosition.Position = direction
				bodyPosition.Parent = char.PrimaryPart
				char.Humanoid:LoadAnimation(animfolder.special.dash):Play()

				task.wait(.2)
				bodyPosition:Destroy()
			end
		end
	end
	if input.KeyCode == Enum.KeyCode[settingz.posekey] then
		if posing == false then 
			posing = true
			restanim:Play()
			char.HumanoidRootPart.Anchored = true
		else
			posing = false
			restanim:Stop()
			char.HumanoidRootPart.Anchored = false
		end
	end

	if input.KeyCode == Enum.KeyCode[settingz.tpkey] then
		char.HumanoidRootPart.CFrame = CFrame.new(409.553162, 26.9167194, 55.4289284, 0.156444028, 3.92138474e-11, 0.987686813, -8.07637512e-10, 1, 8.82225196e-11, -0.987686813, -8.11494816e-10, 0.156444028)
		workspace.ServerStuff.playAudio:FireServer({"events"}, "shiparrive2", char.PrimaryPart)
		workspace.ServerStuff.playAudio:FireServer({"events"}, "shiparrive", char.PrimaryPart)
		workspace.ServerStuff.handlePerkVisibility:FireServer("put_googles")
	end
	if input.KeyCode == Enum.KeyCode.R and humanoiddied == false and settingz.reload_voice == true then
		workspace.ServerStuff.playAudio:FireServer({"voices", "ilija", "reload"}, current_rel_vc, workspace)
	end
end)

char:WaitForChild("Humanoid").Died:Connect(function()
	workspace.ServerStuff.playAudio:FireServer({"soldiers"}, "defeat", char.PrimaryPart)
	wait(0.1)
	humanoiddied = true
end)

-- this is poorly coded, enjoy.
